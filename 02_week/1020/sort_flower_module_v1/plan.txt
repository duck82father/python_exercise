[ "목표
1.  my_flower.exe 실행파일 생성
2.  파일 실행 후, learn_data.csv 파일 읽어오기
3.  결과 내용을 result_231020******.txt 파일로 내보내기 (시, 분, 초까지)
    > 파일 내용은 (저장된 시간, k 값, 세토사/베르시컬러 여부)

[ 중요사항
1.  모듈과 함수 정의(def)로 구성한다

[ 구성
# 파일명 : my_flower.py
1. 안내문구 print

2. csv 데이터 ( csv_file.py > load( ) > return csv_data )
	- csv 파일 읽기
	- 입력값 'y'를 받으면 다음 단계 진행 ( 파일을 준비해주세요 [ Y / N ] )
        - y 이외의 값이 나오면 다시 입력 대기상태로 돌아감.
	- 꽃받침의 '길이, 너비, 종류'를 csv_data (type:list)로 전달
        - 파일이 있으면 '입력이 완료되었습니다.' print
        - 파일이 없으면 '파일을 다시 확인해주세요.' print 후 다시 입력 대기상태로 돌아감.

3. 안내문구와 함께 csv 데이터를 print
    - 안내문구 : '[ 꽃 데이터 (꽃받침의 길이, 꽃받침의 너비) ]'

4. 확인할 꽃받침의 길이와 너비를 입력 ( flower_l, flower_w )
    - 안내문구 : '꽃받침의 길이를 입력하시오 > ', '꽃받침의 너비를 입력하시오 > '

5. 확인할 k 값을 입력 ( k )
    - 안내문구 : 'k 값을 입력하시오 > '

6. 입력된 값과 csv 데이터 사이의 vector 값 구하기 ( cal.py > vector() > return flower_data )
    - flower_l, flower_w 와 csv_data 사이의 vector 값과 종류(세토사/베르시컬러)값을 flower_data (list)로 저장한다

7. k번째까지의 vector 값에 종류(세토사/베르시컬러) 갯수 파악 ( cal.py > sort_vect() > return sts )
    - flower_data를 vector 값 기준으로 오름차순으로 정리
    - 정리된 vector에서 k번째까지 나열했을 때 종류의 갯수를 파악한다.
        - 이중 '세토사'의 값만 return 한다.

8. 



